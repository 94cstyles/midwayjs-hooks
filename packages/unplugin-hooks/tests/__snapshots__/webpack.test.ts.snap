// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unplugin-hooks webpack Compile lambda 1`] = `
import { http as rpc$0 } from '@midwayjs/rpc';
export default function $default(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'GET', path: '/' },
        functionId: 'lambda-index',
        hasMetadataInput: false,
    };
    return rpc$0(route, ...args);
}
export function usePost(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'POST', path: '/usePost' },
        functionId: 'lambda-index-usepost',
        hasMetadataInput: false,
    };
    return rpc$0(route, ...args);
}
export function withQuery(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'GET', path: '/withQuery' },
        functionId: 'lambda-index-withquery',
        hasMetadataInput: true,
    };
    return rpc$0(route, ...args);
}

`;

exports[`unplugin-hooks webpack Compile render 1`] = `
import { http as rpc$0 } from '@midwayjs/rpc';
export function bar(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'GET', path: '/bar/*' },
        functionId: 'render-index-bar',
        hasMetadataInput: false,
    };
    return rpc$0(route, ...args);
}
export default function $default(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'GET', path: '/*' },
        functionId: 'render-index',
        hasMetadataInput: false,
    };
    return rpc$0(route, ...args);
}
export function foo(...args) {
    const route = {
        trigger: { type: 'HTTP', method: 'GET', path: '/foo/*' },
        functionId: 'render-index-foo',
        hasMetadataInput: false,
    };
    return rpc$0(route, ...args);
}

`;

exports[`unplugin-hooks webpack non-lambda files should not be compiled 1`] = `
export function isTrue(value) {
    return value === 'true' || value === true;
}

`;
